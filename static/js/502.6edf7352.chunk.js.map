{"version":3,"file":"static/js/502.6edf7352.chunk.js","mappings":"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","sources":["validations/writeArticle.validation.js","components/WriteArticle.jsx"],"sourcesContent":["import * as Yup from \"yup\";\r\n\r\nconst WriteArticleValidation = Yup.object({\r\n  title: Yup.string()\r\n    .required(\"Title is required\")\r\n    .min(5, \"Minimum 5 characters required\")\r\n    .matches(/^[a-zA-Z\\s/]*$/g, \"Invalid title\")\r\n    .trim(),\r\n  sub_title: Yup.string()\r\n    .required(\"Sub Title is required\")\r\n    .min(5, \"Minimum 5 characters required\")\r\n    .matches(/^[a-zA-Z\\s]*$/, \"Invalid sub-title\")\r\n    .trim(),\r\n  content: Yup.array().of(\r\n    Yup.object().shape({\r\n      style: Yup.string(),\r\n      contentText: Yup.string()\r\n        .required(\"Content is required\")\r\n        .min(5, \"Minimum 5 characters required\")\r\n        .trim(),\r\n    })\r\n  ),\r\n  category: Yup.string().required(\"Category is required\").trim(),\r\n});\r\n\r\nexport default WriteArticleValidation;\r\n","import { Formik, Field, Form, FieldArray } from \"formik\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { AuthContext } from \"../context/Context\";\r\nimport WriteArticleValidation from \"../validations/writeArticle.validation\";\r\nimport { doc, collection, serverTimestamp, setDoc } from \"firebase/firestore\";\r\nimport { db } from \"../Firebase\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useRef } from \"react\";\r\n// import { ref, uploadBytes } from \"firebase/storage\";\r\nconst WriteArticle = () => {\r\n  const { authData } = useContext(AuthContext);\r\n\r\n  const buttonRef = useRef(null);\r\n\r\n  // const [postedArticle, setPostedArticle] = useState(false);\r\n\r\n  const toastConfig = {\r\n    position: \"top-right\",\r\n    autoClose: 2000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: false,\r\n    draggable: false,\r\n    progress: undefined,\r\n  };\r\n\r\n  // const [uploadedImageUrl, setUploadedImageUrl] = useState(\"\");\r\n\r\n  const initialValues = {\r\n    title: \"\",\r\n    sub_title: \"\",\r\n    content: [{ style: \"\", contentText: \"\" }],\r\n    post_image: \"\",\r\n    category: \"\",\r\n  };\r\n\r\n  // const handelImageUpload = (e) => {\r\n  //   const imageUrl = URL.createObjectURL(e.target.files[0]);\r\n  //   setUploadedImageUrl(imageUrl);\r\n  // };\r\n\r\n  const postArticle = async (values, resetForm) => {\r\n    // const storageRef = ref(storage, `${initialValues.title}.jpg`);\r\n    // uploadBytes(storageRef, uploadedImageUrl).then((snapshot) => {\r\n    //   console.log(\"uploaded\");\r\n    // });\r\n    const newArticle = doc(collection(db, \"articles\"));\r\n    await setDoc(newArticle, {\r\n      ...values,\r\n      date: serverTimestamp(),\r\n      author: authData?.displayName,\r\n      author_image: authData?.photoURL,\r\n    });\r\n    // console.log(values);\r\n    resetForm();\r\n    // setSelectedStyle([]);\r\n    // setPostedArticle(true);\r\n    toast.success(\"Posted Successfully\", toastConfig);\r\n    // console.log(\"Article posted\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    return () => {};\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"w-full max-w-[40rem] mx-auto px-6 py-10 mt-20\">\r\n      <h2 className=\"font-semibold text-xl mb-10 text-center underline\">\r\n        Lets get Started writing an article\r\n      </h2>\r\n      <div>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={WriteArticleValidation}\r\n          validateOnChange={false}\r\n          onSubmit={(values, { resetForm }) => {\r\n            // console.log(values);\r\n            postArticle(values, resetForm);\r\n          }}\r\n        >\r\n          {({ errors, values, setFieldValue }) => {\r\n            return (\r\n              <Form autoComplete=\"off\">\r\n                <div className=\"flex flex-col space-y-1 relative\">\r\n                  <label className=\"font-semibold text-base\" htmlFor=\"title\">\r\n                    Title\r\n                  </label>\r\n                  <Field\r\n                    className=\"border-2 border-gray-400 focus:outline-none px-2 py-1 rounded-md\"\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    id=\"title\"\r\n                  />\r\n                  <p className=\"text-sm text-red-600 font-semibold\">\r\n                    {errors.title}\r\n                  </p>\r\n                </div>\r\n                <div className=\"flex flex-col space-y-1 relative mt-6\">\r\n                  <label\r\n                    className=\"font-semibold text-base\"\r\n                    htmlFor=\"sub_title\"\r\n                  >\r\n                    Sub Title\r\n                  </label>\r\n                  <Field\r\n                    className=\"border-2 border-gray-400 focus:outline-none px-2 py-1 rounded-md\"\r\n                    type=\"text\"\r\n                    name=\"sub_title\"\r\n                    id=\"sub_title\"\r\n                  />\r\n                  <p className=\"text-sm text-red-600 font-semibold\">\r\n                    {errors.sub_title}\r\n                  </p>\r\n                </div>\r\n                <div className=\"flex flex-col space-y-1 relative mt-6\">\r\n                  <label className=\"font-semibold text-base\" htmlFor=\"category\">\r\n                    Category\r\n                  </label>\r\n                  <Field\r\n                    className=\"border-2 border-gray-400 focus:outline-none px-2 py-1 rounded-md\"\r\n                    type=\"text\"\r\n                    name=\"category\"\r\n                    id=\"category\"\r\n                  />\r\n                  <p className=\"text-sm text-red-600 font-semibold\">\r\n                    {errors.category}\r\n                  </p>\r\n                </div>\r\n                <div className=\"flex flex-col space-y-1 relative mt-6\">\r\n                  <label className=\"font-semibold text-base\" htmlFor=\"content\">\r\n                    Content\r\n                  </label>\r\n                  <FieldArray name=\"content\">\r\n                    {({ push, remove }) => {\r\n                      return (\r\n                        <div className=\"flex flex-col space-y-0\">\r\n                          {values.content.length > 0 &&\r\n                            values.content.map((contentField, index) => (\r\n                              <div key={index} className=\"flex flex-col\">\r\n                                <button\r\n                                  className={`${\r\n                                    index === 0 && \"hidden\"\r\n                                  } text-3xl mb-2 w-20 text-right self-end`}\r\n                                  onClick={() => {\r\n                                    remove(index);\r\n                                  }}\r\n                                >\r\n                                  -\r\n                                </button>\r\n                                <div className=\"flex justify-between items-start space-x-3\">\r\n                                  <div className=\"flex flex-col flex-grow\">\r\n                                    <Field\r\n                                      className={`border-2 border-gray-400 focus:outline-none px-2 py-1 rounded-md w-full ${values.content[index].style}`}\r\n                                      as=\"textarea\"\r\n                                      rows={4}\r\n                                      name={`content[${index}].contentText`}\r\n                                      id={`content[${index}]`}\r\n                                    />\r\n                                    <p className=\"text-sm text-red-600 font-semibold\">\r\n                                      {errors.content &&\r\n                                        errors.content[index]?.contentText}\r\n                                    </p>\r\n                                  </div>\r\n                                  <div className=\"flex flex-col space-y-2\">\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      className={`italic text-lg px-3 py-0.5 rounded-md ${\r\n                                        values.content[index].style ===\r\n                                          \"italic\" &&\r\n                                        \"bg-black bg-opacity-90 text-white\"\r\n                                      }`}\r\n                                      onClick={() => {\r\n                                        setFieldValue(\r\n                                          `content[${index}.style]`,\r\n                                          \"italic\"\r\n                                        );\r\n                                      }}\r\n                                    >\r\n                                      i\r\n                                    </button>\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      className={`font-bold text-lg px-3 py-0.5 rounded-md ${\r\n                                        values.content[index].style ===\r\n                                          \"font-bold\" &&\r\n                                        \"bg-black bg-opacity-90 text-white\"\r\n                                      }`}\r\n                                      onClick={() => {\r\n                                        setFieldValue(\r\n                                          `content[${index}.style]`,\r\n                                          \"font-bold\"\r\n                                        );\r\n                                      }}\r\n                                    >\r\n                                      B\r\n                                    </button>\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      className={`underline text-lg px-3 py-0.5 rounded-md ${\r\n                                        values.content[index].style ===\r\n                                          \"underline\" &&\r\n                                        \"bg-black bg-opacity-90 text-white\"\r\n                                      }`}\r\n                                      onClick={() => {\r\n                                        setFieldValue(\r\n                                          `content[${index}.style]`,\r\n                                          \"underline\"\r\n                                        );\r\n                                      }}\r\n                                    >\r\n                                      U\r\n                                    </button>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            ))}\r\n                          <button\r\n                            type=\"button\"\r\n                            ref={buttonRef}\r\n                            onClick={() => {\r\n                              push(\"\");\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      );\r\n                    }}\r\n                  </FieldArray>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"w-40 text-left\"\r\n                    onClick={() => {\r\n                      buttonRef.current && buttonRef.current.click();\r\n                    }}\r\n                  >\r\n                    + Add more content\r\n                  </button>\r\n                </div>\r\n                <div className=\"flex flex-col space-y-1 relative mt-6\">\r\n                  <label\r\n                    className=\"font-semibold text-base\"\r\n                    htmlFor=\"image_url\"\r\n                  >\r\n                    Image URL\r\n                  </label>\r\n                  <Field\r\n                    className=\"border-2 border-gray-400 focus:outline-none px-2 py-1 rounded-md\"\r\n                    name=\"post_image\"\r\n                    id=\"post_image\"\r\n                  />\r\n                </div>\r\n                {/* <input\r\n                  type=\"file\"\r\n                  name=\"post_image\"\r\n                  onChange={(e) => {\r\n                    handelImageUpload(e);\r\n                  }}\r\n                  id=\"\"\r\n                />\r\n                {uploadedImageUrl && (\r\n                  <figure className=\"post-image\">\r\n                    <img\r\n                      className=\"w-full h-full\"\r\n                      src={uploadedImageUrl}\r\n                      alt=\"\"\r\n                    />\r\n                  </figure>\r\n                )} */}\r\n                <button\r\n                  className=\"bg-black text-white rounded-3xl text-xl font-semibold w-full px-8 py-2 mt-10 bg-opacity-90 hover:bg-opacity-100\"\r\n                  type=\"submit\"\r\n                >\r\n                  Publish\r\n                </button>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </div>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\nexport default WriteArticle;\r\n"],"names":["Yup","title","required","min","matches","trim","sub_title","content","of","shape","style","contentText","category","authData","useContext","AuthContext","buttonRef","useRef","toastConfig","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","postArticle","values","resetForm","newArticle","doc","collection","db","setDoc","date","serverTimestamp","author","displayName","author_image","photoURL","toast","useEffect","window","scrollTo","className","initialValues","post_image","validationSchema","WriteArticleValidation","validateOnChange","onSubmit","errors","setFieldValue","autoComplete","htmlFor","type","name","id","push","remove","length","map","contentField","index","onClick","as","rows","ref","current","click"],"sourceRoot":""}